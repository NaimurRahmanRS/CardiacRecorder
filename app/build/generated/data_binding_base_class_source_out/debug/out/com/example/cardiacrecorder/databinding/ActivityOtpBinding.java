// Generated by view binder compiler. Do not edit!
package com.example.cardiacrecorder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.cardiacrecorder.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOtpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonVerify;

  @NonNull
  public final ConstraintLayout constraintLayoutLogin;

  @NonNull
  public final TextInputEditText editTextOTP;

  @NonNull
  public final LottieAnimationView lottieView;

  @NonNull
  public final TextView textViewAboutOTP;

  @NonNull
  public final TextInputLayout tilOTP;

  @NonNull
  public final View view;

  private ActivityOtpBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonVerify,
      @NonNull ConstraintLayout constraintLayoutLogin, @NonNull TextInputEditText editTextOTP,
      @NonNull LottieAnimationView lottieView, @NonNull TextView textViewAboutOTP,
      @NonNull TextInputLayout tilOTP, @NonNull View view) {
    this.rootView = rootView;
    this.buttonVerify = buttonVerify;
    this.constraintLayoutLogin = constraintLayoutLogin;
    this.editTextOTP = editTextOTP;
    this.lottieView = lottieView;
    this.textViewAboutOTP = textViewAboutOTP;
    this.tilOTP = tilOTP;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOtpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOtpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_otp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOtpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonVerify;
      Button buttonVerify = ViewBindings.findChildViewById(rootView, id);
      if (buttonVerify == null) {
        break missingId;
      }

      ConstraintLayout constraintLayoutLogin = (ConstraintLayout) rootView;

      id = R.id.editTextOTP;
      TextInputEditText editTextOTP = ViewBindings.findChildViewById(rootView, id);
      if (editTextOTP == null) {
        break missingId;
      }

      id = R.id.lottie_view;
      LottieAnimationView lottieView = ViewBindings.findChildViewById(rootView, id);
      if (lottieView == null) {
        break missingId;
      }

      id = R.id.textViewAboutOTP;
      TextView textViewAboutOTP = ViewBindings.findChildViewById(rootView, id);
      if (textViewAboutOTP == null) {
        break missingId;
      }

      id = R.id.tilOTP;
      TextInputLayout tilOTP = ViewBindings.findChildViewById(rootView, id);
      if (tilOTP == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ActivityOtpBinding((ConstraintLayout) rootView, buttonVerify,
          constraintLayoutLogin, editTextOTP, lottieView, textViewAboutOTP, tilOTP, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
